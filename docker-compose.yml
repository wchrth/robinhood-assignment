services:
  go-app:
    build: .
    container_name: go-app
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=testdb
      - DATABASE_USER=appuser
      - DATABASE_PASSWORD=1234
    ports:
      - "8080:8080"
    networks:
      - go-network
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  postgres:
    image: postgres:17.3-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "appuser", "-d", "testdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate:v4.18.2
    command: >
      -path db/migrations -database postgres://appuser:1234@postgres:5432/testdb?sslmode=disable up
    volumes:
      - ./db:/db
    networks:
      - go-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  go-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
